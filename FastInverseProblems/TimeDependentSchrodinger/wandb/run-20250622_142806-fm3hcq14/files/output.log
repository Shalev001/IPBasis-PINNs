tensor([[5.]], device='cuda:0')
tensor([[62.5000],
        [60.0002],
        [57.5515],
        ...,
        [57.5515],
        [60.0002],
        [62.5000]], device='cuda:0', grad_fn=<MulBackward0>)
torch.Size([10000, 1])
Traceback (most recent call last):
  File "n:\PINN-RC\FastInverseProblems\TimeDependentSchrodinger\OfflineTrainingTests.py", line 328, in <module>
    Reservoir, averageLossOverTime = trainFullNetworkWithPrecomputing(Reservoir,data,(tscale),(xscale),outmodel,nummodels,ICs,LeftBoundary,RightBoundary,colocationPoints,ODEWeight,ICWeight,BCWeight,DataWeight,trainingEpochs,loss_fn,trainlr,averageLossOverTime,device,verbose=False)
  File "n:\PINN-RC\FastInverseProblems\TimeDependentSchrodinger\OfflineTrainingTests.py", line 182, in trainFullNetworkWithPrecomputing
    ODEloss = SchrodingerEqnResidualLoss(ResOutOverEvaluationPoints, ReservoirFirstTDerivative,ReservoirSecondXDerivative,colocationPoints[:,1],coefficients, outmodel,evenmask,oddmask)
  File "n:\PINN-RC\FastInverseProblems\TimeDependentSchrodinger\OfflineTrainingTests.py", line 89, in SchrodingerEqnResidualLoss
    print(1/0)
ZeroDivisionError: division by zero
