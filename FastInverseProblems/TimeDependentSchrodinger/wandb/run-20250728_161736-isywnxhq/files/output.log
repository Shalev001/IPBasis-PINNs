torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
torch.Size([5000, 100])
torch.Size([4900, 100])
Traceback (most recent call last):
  File "/u/smanor/PINN-RC/FastInverseProblems/TimeDependentSchrodinger/OfflineTraining.py", line 440, in <module>
    logloss = torch.log(torch.tensor(averageLossOverTime))
  File "/u/smanor/PINN-RC/FastInverseProblems/TimeDependentSchrodinger/OfflineTraining.py", line 274, in trainFullNetworkWithPrecomputing
    #print(torch.mean(torch.abs(secondXDer - ReservoirSecondXDerivative)))
  File "/u/smanor/PINN-RC/FastInverseProblems/TimeDependentSchrodinger/OfflineTraining.py", line 136, in computeDerivatives
    #extracting the calculated second derivatives
  File "/u/smanor/PINN-RC/third_party/fomoh/src/fomoh/nn.py", line 228, in __call__
    x = x.tanh()
  File "/u/smanor/PINN-RC/third_party/fomoh/src/fomoh/hyperdual.py", line 215, in tanh
    return HyperTensor.unary(self, f, fa, faa)
  File "/u/smanor/PINN-RC/third_party/fomoh/src/fomoh/hyperdual.py", line 71, in unary
    eps1 = fa(real, A, A.eps1)
  File "/u/smanor/PINN-RC/third_party/fomoh/src/fomoh/hyperdual.py", line 213, in <lambda>
    fa = lambda real, A, A_eps1: (1/torch.cosh(A.real)) **2 * A_eps1
KeyboardInterrupt
