torch.Size([5000, 100])
tensor(1.6965e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7989e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6956e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7968e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6885e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7941e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6866e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7985e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6937e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7946e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6989e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7976e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6927e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7914e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6873e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7903e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6903e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7865e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6899e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7636e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6570e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7878e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6680e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7619e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6702e-07, grad_fn=<MeanBackward0>)
torch.Size([4900, 100])
tensor(1.7752e-07, grad_fn=<MeanBackward0>)
torch.Size([5000, 100])
tensor(1.6782e-07, grad_fn=<MeanBackward0>)
Traceback (most recent call last):
  File "/u/smanor/PINN-RC/FastInverseProblems/TimeDependentSchrodinger/OfflineTraining.py", line 436, in <module>
    Reservoir, averageLossOverTime = trainFullNetworkWithPrecomputing(TorchReservoir,HyperTensReservoir,data,(tscale),(xscale),outmodel,nummodels,ICs,LeftBoundary,RightBoundary,colocationPoints,ODEWeight,ICWeight,BCWeight,DataWeight,trainingEpochs,loss_fn,trainlr,averageLossOverTime,device,verbose=False)
  File "/u/smanor/PINN-RC/FastInverseProblems/TimeDependentSchrodinger/OfflineTraining.py", line 257, in trainFullNetworkWithPrecomputing
    grad2 = torch.autograd.grad(
  File "/u/smanor/.conda/envs/PINN-RC/lib/python3.10/site-packages/torch/autograd/__init__.py", line 496, in grad
    result = _engine_run_backward(
  File "/u/smanor/.conda/envs/PINN-RC/lib/python3.10/site-packages/torch/autograd/graph.py", line 825, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
